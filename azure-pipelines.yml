trigger:
  - main

pool:
  name: Default # O el nombre de tu pool de agentes
  demands:
    - agent.name -equals viviagent

variables:
  # Nombre de la aplicación en Azure Containers App Service
  webAppName: "pis6tofrontend"
  # Nombre del grupo de recursos en Azure
  resourceGroupName: "pis6to"
  # Región de despliegue
  location: "eastus"
  # Versión de Node.js a usar
  nodeVersion: "20.x"

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(nodeVersion)
    displayName: "Instalar Node.js"

  - script: |
      npm install
    displayName: "Instalar dependencias"

  - script: |
      npm run build
    displayName: "Construir aplicación"

  - task: Docker@2
    inputs:
      containerRegistry: "pis6toregistrygroup"
      repository: "frontend"
      command: "buildAndPush"
      tags: "$(Build.BuildId)"
      Dockerfile: "**/Dockerfile"
    displayName: "Construcción de imagen docker y push"

  - task: AzureCLI@2
    inputs:
      azureSubscription: "Azure for Students(e4ab839e-a978-4b88-8ea0-004e92b4c56b)"
      scriptType: "bash"
      scriptLocation: "inlineScript"
      inlineScript: |
        ACR_USERNAME=$(az acr credential show --name $(containerRegistry) --query "username" --output tsv)
        ACR_PASSWORD=$(az acr credential show --name $(containerRegistry) --query "passwords[0].value" --output tsv)

        az container create \
          --resource-group $(resourceGroupName) \
          --name $(webAppName) \
          --image $(containerRegistry).azurecr.io/frontend:$(Build.BuildId) \
          --cpu 1 \
          --memory 1 \
          --registry-login-server $(containerRegistry).azurecr.io \
          --registry-username $ACR_USERNAME \
          --registry-password $ACR_PASSWORD \
          --dns-name-label pis6to \
          --ports 80
    displayName: "Despliegue de imagen a App Service Container."

  # - task: ArchiveFiles@2
  #   inputs:
  #     rootFolderOrFile: "$(Build.SourcesDirectory)/.next"
  #     includeRootFolder: false
  #     archiveType: "zip"
  #     archiveFile: "$(Build.ArtifactStagingDirectory)/app.zip"
  #     replaceExistingArchive: true
  #   displayName: "Empaquetar archivos de construcción"

  # - task: PublishBuildArtifacts@1
  #   inputs:
  #     pathToPublish: "$(Build.ArtifactStagingDirectory)"
  #     artifactName: "drop"
  #   displayName: "Publicar artefactos de construcción"

  # - task: AzureWebApp@1
  #   inputs:
  #     azureSubscription: "Azure for Students(e4ab839e-a978-4b88-8ea0-004e92b4c56b)"
  #     appType: "webAppLinux"
  #     appName: "pis6tofront"
  #     package: "$(Build.ArtifactStagingDirectory)/app.zip"
  #     runtimeStack: "NODE|20-lts"
  #   displayName: "Desplegar a Azure App Service"
